<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAG4AAACCCAYAAACn3f0CAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAJfSURBVHhe7dHBaYNBEMXg9F+PC3MHCXMwDPLaRzv60QMdd2H4fm6322/5Ck5acNKCk/YW7n6/
        1xc7mTx6CXf6qD7fyWY6wp0+qO91MnqCOz2s70en4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn
        4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn
        4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn
        4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn
        4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn
        4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn4CTRKThJdApOEp2Ck0Sn4CTRKThJdHqCm04P63ud
        jI5w0+mD+nwnm+kl3HT6qD7XyeTRW7j6vwUnLThpwUkLTtpbuCvOdNu2YC/hrjrbfdtkd4S78ow3bptH
        T3BXn/XObTQFJ9k2moKTbBtNwUm2jabgJNtGU3CSbaMpOMm20RScZNtoCk6ybTQFJ9k2moKTbBtNwUm2
        jabgJNtGU3CSbaMpOMm20RScZNtoCk6ybTQFJ9k2mp7gpivPeOO2eXSEm646233bZPcSbrriTLdtC/YW
        rv5vwUkLTlpwym6/fxREqZYvKSCyAAAAAElFTkSuQmCC
</value>
  </data>
</root>